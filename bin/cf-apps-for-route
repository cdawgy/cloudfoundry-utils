#!/bin/bash
set -e

VERSION="(development build)"

if [[ $1 == "-?" || $1 == "-h" || $1 == "--help" ]]; then
	echo "Usage: cf-apps-for-route <route>"
	echo
	echo  cf-apps-for-route takes an FQDN of an app hosted by Cloud Foudnry,
	echo  and attempts to find the apps to which that domain is mapped.
	echo
	echo  Also included in the output are the Orgs + Spaces of the apps
	echo  found, so you more easily target + manipulate those apps.
	exit 0
fi

if [[ $1 == "-v" || $1 == "--version" ]]; then
	echo cf-apps-for-route ${VERSION}
	exit 0
fi

debug() {
	if [[ -n ${DEBUG} && ${DEBUG} != '0' ]];
		then echo >&2 '>> ' "$*"
	fi
}

function cf_curl() {
	set -e
	url=$1
	md5=$(echo "${url}" | md5sum | cut -f1 -d " ")
		path="${tmpdir}/${md5}"
	if [[ ! -f $path ]]; then
		debug "No cached data found - cf curl ${url}"
		cf curl "${url}" > ${path}
		if [[ -n ${TRACE} && ${TRACE} != '0' ]]; then
			(cat ${path} | sed -e 's/^/    /') >&2
		fi
	fi
	cat ${path}
}

ROUTE=$1
if [[ -z $ROUTE ]]; then
	echo >&2 "USAGE: $0 <route>"
	exit 1
fi

tmpdir=$(mktemp -d)
trap 'rm -rf ${tmpdir?:nothing to remove}' INT TERM QUIT EXIT
debug "set up workspace directory at ${tmpdir}"

echo -e >&2 "...gathering data from Cloud Foundry (this may take a while )..."

(
echo "Organization|Space|Applicaton"
echo "============|=====|=========="
for url in $(cf_curl /v2/routes | jq -r '.resources[].metadata.url'); do
	host=$(cf_curl $url | jq -r '.entity.host')
	domain=$(cf_curl $(cf_curl $url | jq -r '.entity.domain_url') | jq -r '.entity.name')
	debug "found route ${host}.${domain}..."
	if [[ "${host}.${domain}" == ${ROUTE} ]]; then
		n=0
		for app_url in $(cf_curl $(cf_curl $url | jq -r '.entity.apps_url') | jq -r '.resources[].metadata.url'); do
			name=$(cf_curl $app_url | jq -r '.entity.name')
			debug " + found app ${name}"
			n=$((n + 1))

			#cf_curl $(cf_curl $app_url | jq -r '.entity.space_url')
			org=$(cf_curl $(cf_curl $(cf_curl $app_url | jq -r '.entity.space_url') | jq -r '.entity.organization_url') | jq -r '.entity.name')
			space=$(cf_curl $(cf_curl $app_url | jq -r '.entity.space_url') | jq -r '.entity.name')
			echo "${org}|${space}|${name}"
		done
		if [[ $n == 0 ]]; then
			org=$(cf_curl $(cf_curl $(cf_curl $url | jq -r '.entity.space_url') | jq -r '.entity.organization_url') | jq -r '.entity.name')
			space=$(cf_curl $(cf_curl $url | jq -r '.entity.space_url') | jq -r '.entity.name')
			echo "${org}|${space}|-"
		fi
	fi
done
) | column -t -s '|'
